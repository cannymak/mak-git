package com.flickr.hibernate.entities;

// Generated Jul 18, 2015 5:27:08 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * FlickrImage generated by hbm2java
 */
@Entity
@Table(name = "flickr_image", schema = "public")
public class FlickrImage implements java.io.Serializable {

	private long imageId;
	private FlickrUser flickrUser;
	private long albumId;
	private String imageName;
	private String imageDescription;
	private String imageContentType;
	private long imageSize;
	private boolean imageIsPrivate;
	private Date imageCreatedDate;
	private Date imageUpdatedDate;
	private Set<FlickrImageMetadata> flickrImageMetadatas = new HashSet<FlickrImageMetadata>(
			0);
	private Set<FlickrImageComments> flickrImageCommentses = new HashSet<FlickrImageComments>(
			0);
	private Set<FlickrImageData> flickrImageDatas = new HashSet<FlickrImageData>(
			0);
	private Set<FlickrFavourites> flickrFavouriteses = new HashSet<FlickrFavourites>(
			0);
	private Set<FlickrImageRating> flickrImageRatings = new HashSet<FlickrImageRating>(
			0);

	public FlickrImage() {
	}

	public FlickrImage(long imageId, FlickrUser flickrUser, long albumId,
			String imageName, String imageDescription, String imageContentType,
			long imageSize, boolean imageIsPrivate, Date imageCreatedDate,
			Date imageUpdatedDate) {
		this.imageId = imageId;
		this.flickrUser = flickrUser;
		this.albumId = albumId;
		this.imageName = imageName;
		this.imageDescription = imageDescription;
		this.imageContentType = imageContentType;
		this.imageSize = imageSize;
		this.imageIsPrivate = imageIsPrivate;
		this.imageCreatedDate = imageCreatedDate;
		this.imageUpdatedDate = imageUpdatedDate;
	}

	public FlickrImage(long imageId, FlickrUser flickrUser, long albumId,
			String imageName, String imageDescription, String imageContentType,
			long imageSize, boolean imageIsPrivate, Date imageCreatedDate,
			Date imageUpdatedDate,
			Set<FlickrImageMetadata> flickrImageMetadatas,
			Set<FlickrImageComments> flickrImageCommentses,
			Set<FlickrImageData> flickrImageDatas,
			Set<FlickrFavourites> flickrFavouriteses,
			Set<FlickrImageRating> flickrImageRatings) {
		this.imageId = imageId;
		this.flickrUser = flickrUser;
		this.albumId = albumId;
		this.imageName = imageName;
		this.imageDescription = imageDescription;
		this.imageContentType = imageContentType;
		this.imageSize = imageSize;
		this.imageIsPrivate = imageIsPrivate;
		this.imageCreatedDate = imageCreatedDate;
		this.imageUpdatedDate = imageUpdatedDate;
		this.flickrImageMetadatas = flickrImageMetadatas;
		this.flickrImageCommentses = flickrImageCommentses;
		this.flickrImageDatas = flickrImageDatas;
		this.flickrFavouriteses = flickrFavouriteses;
		this.flickrImageRatings = flickrImageRatings;
	}

	@Id
	@Column(name = "image_id", unique = true, nullable = false)
	public long getImageId() {
		return this.imageId;
	}

	public void setImageId(long imageId) {
		this.imageId = imageId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public FlickrUser getFlickrUser() {
		return this.flickrUser;
	}

	public void setFlickrUser(FlickrUser flickrUser) {
		this.flickrUser = flickrUser;
	}

	@Column(name = "album_id", nullable = false)
	public long getAlbumId() {
		return this.albumId;
	}

	public void setAlbumId(long albumId) {
		this.albumId = albumId;
	}

	@Column(name = "image_name", nullable = false, length = 500)
	public String getImageName() {
		return this.imageName;
	}

	public void setImageName(String imageName) {
		this.imageName = imageName;
	}

	@Column(name = "image_description", nullable = false, length = 4000)
	public String getImageDescription() {
		return this.imageDescription;
	}

	public void setImageDescription(String imageDescription) {
		this.imageDescription = imageDescription;
	}

	@Column(name = "image_content_type", nullable = false, length = 500)
	public String getImageContentType() {
		return this.imageContentType;
	}

	public void setImageContentType(String imageContentType) {
		this.imageContentType = imageContentType;
	}

	@Column(name = "image_size", nullable = false)
	public long getImageSize() {
		return this.imageSize;
	}

	public void setImageSize(long imageSize) {
		this.imageSize = imageSize;
	}

	@Column(name = "image_is_private", nullable = false)
	public boolean isImageIsPrivate() {
		return this.imageIsPrivate;
	}

	public void setImageIsPrivate(boolean imageIsPrivate) {
		this.imageIsPrivate = imageIsPrivate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "image_created_date", nullable = false, length = 29)
	public Date getImageCreatedDate() {
		return this.imageCreatedDate;
	}

	public void setImageCreatedDate(Date imageCreatedDate) {
		this.imageCreatedDate = imageCreatedDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "image_updated_date", nullable = false, length = 29)
	public Date getImageUpdatedDate() {
		return this.imageUpdatedDate;
	}

	public void setImageUpdatedDate(Date imageUpdatedDate) {
		this.imageUpdatedDate = imageUpdatedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "flickrImage")
	public Set<FlickrImageMetadata> getFlickrImageMetadatas() {
		return this.flickrImageMetadatas;
	}

	public void setFlickrImageMetadatas(
			Set<FlickrImageMetadata> flickrImageMetadatas) {
		this.flickrImageMetadatas = flickrImageMetadatas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "flickrImage")
	public Set<FlickrImageComments> getFlickrImageCommentses() {
		return this.flickrImageCommentses;
	}

	public void setFlickrImageCommentses(
			Set<FlickrImageComments> flickrImageCommentses) {
		this.flickrImageCommentses = flickrImageCommentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "flickrImage")
	public Set<FlickrImageData> getFlickrImageDatas() {
		return this.flickrImageDatas;
	}

	public void setFlickrImageDatas(Set<FlickrImageData> flickrImageDatas) {
		this.flickrImageDatas = flickrImageDatas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "flickrImage")
	public Set<FlickrFavourites> getFlickrFavouriteses() {
		return this.flickrFavouriteses;
	}

	public void setFlickrFavouriteses(Set<FlickrFavourites> flickrFavouriteses) {
		this.flickrFavouriteses = flickrFavouriteses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "flickrImage")
	public Set<FlickrImageRating> getFlickrImageRatings() {
		return this.flickrImageRatings;
	}

	public void setFlickrImageRatings(Set<FlickrImageRating> flickrImageRatings) {
		this.flickrImageRatings = flickrImageRatings;
	}

}
